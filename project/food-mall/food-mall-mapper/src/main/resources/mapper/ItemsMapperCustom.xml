<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zch.mapper.ItemsMapperCustom">

    <select id="getItemsCommonsList" resultType="com.zch.pojo.vo.ItemsCommentVO" parameterType="Map">
        SELECT
            items_comments.sepc_name AS specName,
            items_comments.content AS content,
            items_comments.created_time AS createdTime,
            users.nickname AS nickname,
            users.face AS userFace
        FROM
            items_comments
            LEFT JOIN users ON items_comments.user_id = users.id
        WHERE
            items_comments.item_id = #{paramsMap.itemId}
        <if test="paramsMap.level != null and paramsMap.level != ''">
            AND items_comments.comment_level = #{paramsMap.level}
        </if>
    </select>


    <!--k: 默认排序，根据name-->
    <!--c: 根据销量排序-->
    <!--k: 根据价格排序-->
    <select id="getItemsByKeywords" parameterType="Map" resultType="com.zch.pojo.vo.SearchItemVO">
        SELECT
            it.id AS itemId,
            it.item_name AS itemName,
            it.sell_counts AS sellCounts,
            ii.url AS imgUrl,
            ip.price
        FROM
            items AS it
            LEFT JOIN items_img ii ON ii.item_id = it.id
            LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price FROM items_spec GROUP BY item_id ) ip ON ip.item_id = it.id
        WHERE
            ii.is_main = 1
            <if test="paramsMap.keywords != null and paramsMap.keywords != ''">
                AND it.item_name LIKE '%${paramsMap.keywords}%'
            </if>
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot; ">
                it.sell_counts DESC
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                ip.price ASC
            </when>
            <otherwise>
                it.item_name DESC
            </otherwise>
        </choose>
    </select>

    <select id="getItemsByThirdCat" parameterType="Map" resultType="com.zch.pojo.vo.SearchItemVO">
        SELECT
        it.id AS itemId,
        it.item_name AS itemName,
        it.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        ip.price
        FROM
        items AS it
        LEFT JOIN items_img ii ON ii.item_id = it.id
        LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price FROM items_spec GROUP BY item_id ) ip ON ip.item_id = it.id
        WHERE
        ii.is_main = 1
        <if test="paramsMap.catId != null and paramsMap.catId != ''">
            AND it.cat_id = #{paramsMap.catId}
        </if>
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot; ">
                it.sell_counts DESC
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                ip.price ASC
            </when>
            <otherwise>
                it.item_name DESC
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.zch.pojo.vo.ShopcartVO">
        SELECT
        t_items.id as itemId,
        t_items.item_name as itemName,
        t_items_img.url as itemImgUrl,
        t_items_spec.id as specId,
        t_items_spec.`name` as specName,
        t_items_spec.price_discount as priceDiscount,
        t_items_spec.price_normal as priceNormal
        FROM
        items_spec t_items_spec
        LEFT JOIN
        items t_items
        ON
        t_items.id = t_items_spec.item_id
        LEFT JOIN
        items_img t_items_img
        on
        t_items_img.item_id = t_items.id
        WHERE
        t_items_img.is_main = 1
        AND
        t_items_spec.id IN
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
    </select>
</mapper>